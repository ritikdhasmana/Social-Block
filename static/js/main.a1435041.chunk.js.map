{"version":3,"sources":["components/Navbar.js","components/Main.js","components/App.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","className","style","backgroundColor","href","target","rel","id","this","props","account","borderRadius","width","height","src","concat","Identicon","toString","alt","Component","Main","_this","role","maxWidth","action","onSubmit","event","preventDefault","content","postContent","value","createPost","type","ref","input","placeholder","required","posts","map","post","key","author","window","web3","utils","fromWei","donations","name","onClick","amount","toWei","console","log","donatePost","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","socialBlock","num_post","loading","setState","bind","assertThisInitialized","loadWeb3","loadChainData","ethereum","Web3","send","currentProvider","alert","eth","getAccounts","accounts","net","getId","networkId","networkData","SocialBlock","networks","Contract","abi","address","methods","postInd","i","toConsumableArray","from","on","location","reload","asyncToGenerator","regenerator_default","mark","_callee4","wrap","_context4","prev","next","stop","donationAmount","donate","_callee5","_context5","components_Navbar","components_Main","Boolean","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a1435041.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport Identicon from 'identicon.js';\r\nclass Navbar extends Component{\r\n\r\n\r\n    render(){\r\n        return (\r\n            <nav className=\"navbar navbar-dark bg-dark fixed-top flex-md-nowrap p-0 shadow\" style={{backgroundColor: '#e3f2fd'}}>\r\n        <a\r\n          className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\r\n          href=\"http://www.dappuniversity.com/bootcamp\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Social Block\r\n        </a>\r\n        <ul className=\"navbar-nav px-3 mt-auto\">\r\n          <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\r\n            <small className=\"text-secondary\">\r\n              <small id=\"account\">{this.props.account}</small>\r\n            </small>\r\n            { this.props.account\r\n              ? <img style={{borderRadius : '50%'}} \r\n                className='ml-2'\r\n                width='30'\r\n                height='30'\r\n                \r\n                // border-radius = '50%'\r\n                src={`data:image/png;base64,${new Identicon(this.props.account, 30).toString()}`}\r\n                alt=\"description\"\r\n              />\r\n              : <span></span>\r\n            }\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n        );\r\n        \r\n    }\r\n}\r\n\r\nexport default Navbar;","import React, {Component} from \"react\";\r\nimport Identicon from 'identicon.js';\r\nclass Main extends Component{\r\n\r\n\r\n  render(){  \r\n        return (\r\n            <div className=\"container-fluid mt-5\">\r\n            <div className=\"row\">\r\n              <main role=\"main\" className=\"col-lg-12 ml-auto mr-auto\"\r\n              style={{maxWidth : '1000px'}}>\r\n                <div className=\"content mr-auto ml-auto\">\r\n\r\n                <form className=\"form-horizontal\" action=\"/action_page.php\"\r\n                onSubmit={(event)=>{\r\n                    event.preventDefault()\r\n                    const content = this.postContent.value\r\n                    this.props.createPost(content)\r\n                    \r\n                }}>\r\n                    <div className=\"form-group\">\r\n                      <label className=\"control-label col-sm-2\" >What's up?</label>\r\n                      <div className=\"col-sm-10\">\r\n                        <input type=\"text\"\r\n                        ref = {(input)=>{this.postContent =input}}\r\n                        className=\"form-control\" id=\"postContent\" placeholder=\"Enter here\" required/>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <div className=\"col-sm-offset-2 col-sm-10\">\r\n                        <button type=\"submit\" className=\"btn btn-primary\">Post</button>\r\n                      </div>\r\n                    </div>\r\n                </form>\r\n                <br></br>\r\n                <div> </div>\r\n                  {this.props.posts.map((post,key)=>{\r\n                    return(\r\n                      <div key={key} className=\"card mt-5\">\r\n                          {/* <br></br> */}\r\n                        <div className=\"card-header\">\r\n                        <img\r\n                          style={{borderRadius : '50%'}} \r\n                          className='mr-2'\r\n                          width='30'\r\n                          height='30'\r\n                          alt=\"description\"\r\n                          src={`data:image/png;base64,${new Identicon(post.author, 30).toString()}` }\r\n                        />\r\n                        <small className=\"text-muted\">{post.author}</small>\r\n                        </div>\r\n                        <ul id=\"postList\" className=\"list-group list-group-flush\">\r\n                        <li  className=\"list-group-item\">\r\n                          <p>{post.content}</p>\r\n                        </li>\r\n                        <li  className=\"list-group-item py-2\">\r\n                          <small className=\"text-muted\">\r\n                            Donations: {window.web3.utils.fromWei(post.donations.toString(), 'Ether')} ETH\r\n                          </small>\r\n                          <button\r\n                            className=\"btn btn-primary btn-sm float-right pt-0\"\r\n                            name={post.id}\r\n                            onClick={(event) => {\r\n                              let amount = window.web3.utils.toWei('0.01', 'Ether')\r\n                              console.log(event.target.name, amount)\r\n                              this.props.donatePost(event.target.name, amount)\r\n                            }}\r\n                          >\r\n                            Donate 0.01 ETH\r\n                          </button>\r\n                        </li>\r\n                      </ul>\r\n                      </div>\r\n                      \r\n                    )\r\n                  })}\r\n                </div>\r\n              </main>\r\n            </div>\r\n          </div>\r\n        );\r\n        \r\n    }\r\n}\r\n\r\nexport default Main;","import React, { Component } from 'react';\r\n// import Identicon from 'identicon.js';\r\nimport './App.css';\r\nimport SocialBlock from '../abis/SocialBlock.json'\r\nimport Navbar from './Navbar';\r\nimport Main from './Main';\r\n\r\nimport Web3 from 'web3';\r\n\r\nclass App extends Component {\r\n  async componentWillMount() {\r\n    await this.loadWeb3()\r\n    await this.loadChainData()\r\n  }\r\n\r\n  async loadWeb3() {\r\n    if (window.ethereum) {\r\n      window.web3 = new Web3(window.ethereum)\r\n      await window.ethereum.send('eth_requestAccounts')[0]\r\n    }\r\n    else if (window.web3) {\r\n      window.web3 = new Web3(window.web3.currentProvider)\r\n    }\r\n    else {\r\n      window.alert('No Ethereum browser detected. You should consider trying MetaMask!')\r\n    }\r\n  }\r\n\r\n  async loadChainData(){\r\n    const web3 = window.web3\r\n    const accounts = await web3.eth.getAccounts()\r\n    this.setState({account : accounts[0]})\r\n\r\n    const networkId = await web3.eth.net.getId();\r\n    const networkData = SocialBlock.networks[networkId];\r\n    if(networkData){\r\n      const socialBlock= web3.eth.Contract(SocialBlock.abi,networkData.address);\r\n      this.setState({socialBlock})\r\n      const num_post = await socialBlock.methods.postInd().call()\r\n      this.setState({num_post})\r\n\r\n      for(var i=num_post;i>0;i--){\r\n        const post = await socialBlock.methods.posts(i).call()\r\n        this.setState({\r\n          posts : [...this.state.posts, post]\r\n        })\r\n      }\r\n      this.setState({ loading: false})\r\n    }else{\r\n      window.alert('Contract not deployed!');\r\n    }\r\n  }\r\n  \r\n\r\n  createPost(content) {\r\n    this.setState({ loading: true })\r\n    this.state.socialBlock.methods.createPost(content).send({ from: this.state.account })\r\n    .on(\"transactionHash\", function () {\r\n      console.log(\"Hash\")\r\n  })\r\n  .on(\"receipt\", function () {\r\n      console.log(\"Receipt\");\r\n      window.location.reload(false);\r\n  })\r\n  .on(\"confirmation\", function () {\r\n      console.log(\"Confirmed\");\r\n      window.location.reload(false);\r\n  })\r\n  .on(\"error\", async function () {\r\n      console.log(\"Error\");\r\n      window.location.reload(false);\r\n  });\r\n  }\r\n  donatePost(id, donationAmount) {\r\n    this.setState({ loading: true })\r\n    this.state.socialBlock.methods.donate(id).send({ from: this.state.account, value: donationAmount })\r\n    .on(\"transactionHash\", function () {\r\n      console.log(\"Hash\")\r\n  })\r\n  .on(\"receipt\", function () {\r\n      console.log(\"Receipt\");\r\n      window.location.reload(false);\r\n  })\r\n  .on(\"confirmation\", function () {\r\n      console.log(\"Confirmed\");\r\n      window.location.reload(false);\r\n  })\r\n  .on(\"error\", async function () {\r\n      console.log(\"Error\");\r\n      window.location.reload(false);\r\n  });\r\n  }\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      account : \"\",\r\n      socialBlock : null,\r\n      num_post :0,\r\n      posts : [],\r\n      loading : true\r\n    }\r\n    this.setState = this.setState.bind(this)\r\n    this.createPost = this.createPost.bind(this)\r\n    this.donatePost = this.donatePost.bind(this)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar account ={this.state.account}/>\r\n        {this.state.loading \r\n        ? <div id=\"loader\" className =\"text-center mt-5\" ><p>loading! Try refreshing the page if it takes long....</p></div>\r\n        :<Main \r\n        posts={this.state.posts}\r\n        createPost={this.createPost}\r\n        donatePost = {this.donatePost}\r\n        /> \r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}